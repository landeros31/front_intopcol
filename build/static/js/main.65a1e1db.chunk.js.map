{"version":3,"sources":["helpers/fetch.js","types/types.js","context/chat/chatReducer.js","context/chat/chatContext.js","auth/AuthContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/SearchBox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/horaMes.js","components/IncomingMessage.js","components/OutgoingMessage.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["baseUrl","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","ChatReducer","state","action","type","uid","chatActivo","usuarios","mensajes","payload","from","to","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","user","register","msg","verificaToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setsocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","SearchBox","onClick","SidebarChatItem","usuario","src","alt","Sidebar","filter","map","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","message","createdAt","OutgoingMessage","SendMessage","setMessage","onSubmit","ev","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","Swal","fire","checked","readOnly","disabled","RegisterPage","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","locale","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65a1e1db.chunk.js","sourcesContent":["const baseUrl= \"https://intopcol-chat-empresarial.herokuapp.com/api\";\n\nexport const fetchSinToken= async (endpoint,data,method ='GET') => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    \n    if (method === 'GET') {\n        const resp = await fetch(url);\n        return await resp.json();\n    }else{\n        const resp= await fetch(url,{\n            method,\n            headers:{ \n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n\n        return await resp.json();\n    }\n}\n\nexport const fetchConToken= async (endpoint,data,method ='GET') => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token= localStorage.getItem('token') || '';\n    \n    if (method === 'GET') {\n        const resp = await fetch(url, {\n            headers:{\n                'x-token': token\n            }\n        });\n        return await resp.json();\n    }else{\n        const resp= await fetch(url,{\n            method,\n            headers:{ \n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n\n        return await resp.json();\n    }\n}","\n\nexport const types ={\n\n    usuariosCargados: '[Chat] Usuarios cargados',\n    activarChat: '[Chat] Activar Chat',\n    nuevoMensaje: '[Chat] Nuevo mensaje ',\n    cargarMensajes: '[Chat] cargar mensajes ',\n    cerrarSesion: '[Chat] Cerrar Sesion ',\n\n}","import { types } from \"../../types/types\";\n\nexport const ChatReducer = (state,action) =>{\n\n\n    switch (action.type){\n\n        case types.cerrarSesion:\n            return {\n                uid: '',\n                chatActivo: null,\n                usuarios: [],\n                mensajes: []\n                \n            }\n\n\n        case types.usuariosCargados:\n            return {\n                ...state,\n                usuarios: [ ...action.payload]\n            }\n\n        case types.activarChat:\n\n            if(state.chatActivo === action.payload) return state\n\n            return {\n                ...state,\n                chatActivo: action.payload,\n                mensajes:[]\n\n            }    \n\n        case types.nuevoMensaje:\n            if(state.chatActivo === action.payload.from || \n                state.chatActivo === action.payload.to\n                ){\n                return {\n                    ...state,\n                    mensajes: [...state.mensajes, action.payload]\n                }\n            }else{\n                return state ;\n            }\n\n        case types.cargarMensajes:\n            return {\n                ...state,\n                mensajes: [...action.payload]\n            }\n\n        \n        \n        default:\n            return state;\n    }\n}","import React,{createContext, useReducer} from 'react'\nimport { ChatReducer } from './chatReducer';\n\nexport const ChatContext = createContext();\n\n\n const initialState ={\n\n     uid: '',\n     chatActivo: null, ////al que voy a enviar mensaje\n     usuarios: [], /////todos los usuarios\n     mensajes: [], ///chat seleccionado\n\n }\n\n\n\nexport const ChatProvider = ({children}) => {\n\n    const [ chatState, dispatch] = useReducer(ChatReducer, initialState)\n\n    \n\n    return (\n        \n        <ChatContext.Provider value={{\n\n            chatState,\n            dispatch\n\n        }}>\n            {children}\n        </ChatContext.Provider>\n    )\n}\n","import React, {createContext, useCallback, useContext, useState} from 'react'\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\nimport {ChatContext} from '../context/chat/chatContext'\nimport { types } from '../types/types';\n\nexport const AuthContext= createContext();\n\nconst initialState={\n    uid:null,\n    checking:true,\n    logged:false,\n    name:null,\n    email:null,\n\n};\n\n\nexport const AuthProvider = ({children}) => {\n    const [auth, setAuth] = useState(initialState)\n    const {dispatch} = useContext(ChatContext)\n\n    const login = async (email,password)=>{\n\n        const resp = await fetchSinToken('login', {email,password}, 'POST');\n\n        if ( resp.ok){\n            localStorage.setItem('token', resp.token);\n            const {user}= resp;\n            \n\n            setAuth({\n                uid:user.uid,\n                checking:false,\n                logged:true,\n                name:user.name,\n                email:user.email,\n            });\n            \n        }\n\n        return resp.ok;\n    }\n\n    const register = async (name,email,password)=>{\n\n        const resp = await fetchSinToken('login/new', {name,email,password}, 'POST');\n        \n        if (resp.ok){\n            localStorage.setItem('token', resp.token);\n            const {user}= resp;\n            \n\n            setAuth({\n                uid:user.uid,\n                checking:false,\n                logged:true,\n                name:user.name,\n                email:user.email,\n            });\n            \n            return true;\n        }\n\n        return resp.msg;\n\n    }\n\n    const verificaToken= useCallback(async()=> {\n\n     const token = localStorage.getItem('token')\n     //si token no existe\n     if(!token){\n          setAuth({\n            uid:null,\n            checking:false,\n            logged:false,\n            name:null,\n            email:null,\n        \n        })\n        return false;\n     }\n     const resp = await fetchConToken('login/renew');\n     if(resp.ok){\n        localStorage.setItem('token', resp.token);\n        const {user}= resp;\n        \n\n        setAuth({\n            uid:user.uid,\n            checking:false,\n            logged:true,\n            name:user.name,\n            email:user.email,\n        });\n        return true;\n    }else{\n         setAuth({\n            uid:null,\n            checking:false,\n            logged:false,\n            name:null,\n            email:null,\n        });\n\n        return false;\n    }\n\n\n    },[])\n\n    const logout=() => {\n\n        localStorage.removeItem('token')\n\n        dispatch({ type: types.cerrarSesion })\n\n\n        setAuth({\n            uid:null,\n            checking:false,\n            logged:false,\n            \n        });\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth,\n            login,\n            register,\n            verificaToken,\n            logout,\n        }}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React,{useEffect, useContext} from 'react';\nimport { createContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { useSocket } from '../hooks/useSocket'\nimport { ChatContext } from './chat/chatContext';\n\nimport { types } from '../types/types';\nimport { scrollToBottomAnimated } from '../helpers/scrollToBottom';\n\nexport const SocketContext = createContext();\n\n\nexport const SocketProvider = ({ children }) => {\n\n    const { socket, online, conectarSocket, desconectarSocket } = useSocket('https://intopcol-chat-empresarial.herokuapp.com');\n    const {auth} = useContext (AuthContext);\n    const {dispatch} = useContext(ChatContext);\n\n\n    useEffect(() => {\n        if (auth.logged){\n            conectarSocket();\n        }\n    }, [auth, conectarSocket])\n\n    useEffect(() => {\n        if (!auth.logged){\n            desconectarSocket();\n        }\n    }, [auth,desconectarSocket])\n\n    // Escuchar los cambios en los usuarios conectados\n    useEffect(() => {\n        socket?.on('lista-usuarios', (usuarios) => {\n            dispatch({\n                type: types.usuariosCargados,\n                payload: usuarios\n            })\n        })\n    }, [socket, dispatch]);\n\n    useEffect(() => {\n        socket?.on('mensaje-personal', (mensaje) => {\n\n            dispatch({\n                type: types.nuevoMensaje,\n                payload: mensaje\n            });\n\n            scrollToBottomAnimated('mensajes')\n            \n        })\n    }, [socket,dispatch])\n    \n    return (\n        <SocketContext.Provider value={{ socket, online }}>\n            { children }\n        </SocketContext.Provider>\n    )\n}","import { useCallback, useEffect,useState } from 'react';\nimport io from 'socket.io-client';\n\n\nexport const useSocket = ( serverPath ) => {\n    \n    const [ socket, setsocket] = useState(null);\n    const [ online, setOnline ] = useState(false);\n\n    const conectarSocket = useCallback (()=>{\n\n        const token =localStorage.getItem('token')\n\n\n        const socketTemp =io.connect( serverPath, {\n            transports: ['websocket'],\n            autoConnect:true,\n            forceNew:true,\n            query: {\n                'x-token':token\n            }\n        });\n\n        setsocket(socketTemp);\n\n    },[serverPath]);\n\n    const desconectarSocket = useCallback (()=>{\n            socket?.disconnect();\n\n    },[socket])\n\n\n    useEffect(() => {\n        setOnline( socket?.connected );\n    }, [socket])\n\n    useEffect(() => {\n        socket?.on('connect', () => setOnline( true ));\n    }, [ socket ])\n\n    useEffect(() => {\n        socket?.on('disconnect', () => setOnline( false ));\n    }, [ socket ])\n\n    return {\n        socket,\n        online,\n        conectarSocket,\n        desconectarSocket\n    }\n}","import {animateScroll} from 'react-scroll'\n\n\nexport const scrollToBottom = (id) =>{\n\nanimateScroll.scrollToBottom({\n    containerId: id,\n    duration: 0\n})\n\n}\n\nexport const scrollToBottomAnimated = (id) =>{\n\n    animateScroll.scrollToBottom({\n        containerId: id,\n        duration: 250\n    })\n    \n}","import React from 'react'\n\nexport const ChatSelect = () => {\n    return (\n        <div className=\"middle-screen\">\n            <div className=\"alert-info\">\n                <hr/>\n                <h3>Seleccione una persona</h3>\n                <span>\n                    para comenzar una conversacion\n                </span>\n\n            </div>\n            \n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport {AuthContext} from '../auth/AuthContext'\n\nexport const SearchBox = () => {\n\n    const {auth,logout} = useContext(AuthContext)\n\n    return (\n            <div className=\"headind_srch\">\n                <div className=\"recent_heading mt-2\">\n                    <h4>{auth.name}</h4>\n                </div>\n                <div className=\"srch_bar\">\n                    <div className=\"stylish-input-group\">\n                        <button\n                         className=\"btn text-danger\"\n                         onClick={logout}\n                         >\n                            Salir\n                        </button>\n                    </div>\n                </div>\n            </div>\n            )\n}\n","import React,{ useContext} from 'react'\nimport { ChatContext } from '../context/chat/chatContext'\nimport { fetchConToken } from '../helpers/fetch';\nimport { scrollToBottom } from '../helpers/scrollToBottom';\nimport { types } from '../types/types';\n\nexport const SidebarChatItem = ({usuario}) => {\n\n    const {chatState, dispatch} = useContext(ChatContext);\n    const {chatActivo} = chatState;\n\n    \n    const onClick = async () =>{\n        \n        dispatch({\n            type: types.activarChat,\n            payload:usuario.uid,\n        });\n\n        // Cargas los mensajes del chat\n        const resp= await fetchConToken(`mensajes/${usuario.uid}`);\n    \n        dispatch({\n            type:types.cargarMensajes,\n            payload:resp.mensajes,\n        });\n        \n        scrollToBottom('mensajes')\n        \n            \n\n    }\n\n    return (\n            <div \n                className={`chat_list ${ (usuario.uid === chatActivo) && 'active_chat'}`}\n                onClick={onClick}\n            >\n                {/* active_chat */}\n                <div className=\"chat_people\">\n                    <div className=\"chat_img\"> \n                        <img src=\"https://png.pngtree.com/element_our/20190601/ourlarge/pngtree-sweet-girl-user-avatar-material-image_1341332.jpg\" alt=\"sunil\" />\n                    </div>\n                    <div className=\"chat_ib\">\n                        <h5>{usuario.name}</h5>\n                        {\n                            (usuario.online)\n                                ? <span className=\"text-success\">Online</span>\n                                : <span className=\"text-danger\">Offline</span>\n                        }\n                        \n                        \n                    </div>\n                </div>\n            </div>\n    )\n}","import React, { useContext } from 'react'\nimport { SidebarChatItem } from './SidebarChatItem'\nimport {ChatContext} from '../context/chat/chatContext'\nimport {AuthContext} from '../auth/AuthContext'\n\nexport const Sidebar = () => {\n\n    const { chatState } = useContext(ChatContext)\n    const {auth} = useContext(AuthContext)\n    \n    const { uid } = auth;\n\n    return (\n            <div className=\"inbox_chat\">\n                {\n                    chatState.usuarios\n                    .filter( user => user.uid !== uid)\n                    .map((usuario)=>(\n                        <SidebarChatItem key={usuario.uid} \n                        usuario={ usuario }\n                        />\n                    ))\n                }\n                \n\n                {/* <!-- Espacio extra para scroll --> */}\n                <div className=\"extra_space\"></div>\n\n\n            </div>\n    )\n}\n","import React from 'react'\nimport { SearchBox } from './SearchBox'\nimport { Sidebar } from './Sidebar'\n\nexport const InboxPeople = () => {\n    return (\n            <div className=\"inbox_people\">\n                <SearchBox/>\n                <Sidebar/>\n\n            </div>\n    )\n}\n","import moment from 'moment'\n\n\nexport const horaMes = (fecha)=> {\n    \n    const hoyMes = moment( fecha );\n\n    return hoyMes.format('HH:mm a | MMMM Do');\n\n}","import React from 'react'\nimport { horaMes } from '../helpers/horaMes'\n\nexport const IncomingMessage = ({msg}) => {\n    \n    return (\n            <div className=\"incoming_msg\">\n                <div className=\"incoming_msg_img\">\n                    <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n                </div>\n                <div className=\"received_msg\">\n                    <div className=\"received_withd_msg\">\n                        <p>{msg.message}</p>\n                        <span className=\"time_date\">{horaMes(msg.createdAt)} </span>\n                    </div>\n                </div>\n            </div>\n                    \n    )\n}","import React from 'react'\nimport { horaMes } from '../helpers/horaMes'\n\n\nexport const OutgoingMessage = ({msg}) => {\n    return (\n            <div className=\"outgoing_msg\">\n                <div className=\"sent_msg\">\n                    <p>{msg.message}</p>\n                    <span className=\"time_date\">{horaMes(msg.createdAt)} </span>\n                </div>\n            </div>\n                    \n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/chatContext';\nimport {SocketContext} from '../context/SocketContext'\n\nexport const SendMessage = () => {\n\n    const [message, setMessage] = useState('');\n    const {auth} = useContext(AuthContext)\n    const {socket} = useContext(SocketContext)\n    const {chatState} = useContext(ChatContext)\n\n    const onChange =({target})=>{\n        setMessage(target.value);\n    }\n\n    const onSubmit = (ev) => {\n        ev.preventDefault();\n\n        if( message.length === 0) {return;}\n        \n        setMessage('');\n\n        //emitir un evento de socket\n        socket.emit( 'mensaje-personal', {\n\n         from: auth.uid,\n         to: chatState.chatActivo,\n         message  \n            \n        })        \n\n    }\n\n\n\n    return (\n            <form onSubmit={ onSubmit }>\n                <div className=\"type_msg row\">\n                    <div className=\"input_msg_write col-sm-9\">\n                        <input \n                            type=\"text\" \n                            className=\"write_msg\" \n                            placeholder=\"Mensaje...\" \n                            value={message} \n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"col-sm-3 text-center\">\n                        <button className=\"msg_send_btn mt-3\" type=\"submit\">\n                            enviar\n                        </button>\n                    </div>\n                </div>\n            </form>\n    )\n}","import React, { useContext } from 'react'\nimport { AuthContext } from '../auth/AuthContext'\nimport { ChatContext } from '../context/chat/chatContext'\nimport { IncomingMessage } from './IncomingMessage'\nimport { OutgoingMessage } from './OutgoingMessage'\nimport { SendMessage } from './SendMessage'\n\nexport const Messages = () => {\n\n    const {chatState} = useContext(ChatContext);\n    const {auth} = useContext(AuthContext)\n\n    return (\n            <div className=\"mesgs\">\n\n                {/* <!-- Historia inicio --> */}\n\n\n                <div\n                 className=\"msg_history\"\n                 id=\"mensajes\"\n                 >\n\n                {\n                    chatState.mensajes.map(msg =>(\n\n                        (msg.to === auth.uid)\n                        ? <IncomingMessage key={msg._id} msg={ msg }/>\n                        : <OutgoingMessage key={msg._id} msg={ msg }/>\n\n                    ))\n                }\n\n\n                    \n\n                </div>\n                {/* <!-- Historia Fin --> */}\n\n                <SendMessage/>\n\n            </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ChatSelect } from '../components/ChatSelect'\nimport { InboxPeople } from '../components/InboxPeople'\nimport { Messages } from '../components/Messages'\nimport { ChatContext } from '../context/chat/chatContext'\n\nimport '../css/chat.css'\n\nexport const ChatPage = () => {\n\n    const {chatState} = useContext(ChatContext)\n    \n\n    return (\n        <div className=\"messaging\">\n        <div className=\"inbox_msg\">\n\n            <InboxPeople/>\n            {\n                (chatState.chatActivo)\n                ? <Messages/>\n                : <ChatSelect/>\n            }\n        </div>\n\n\n    </div>\n    )\n}\n","import React,{useContext, useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2';\nimport { AuthContext } from '../auth/AuthContext';\n\nexport const LoginPage = () => {\n\tconst {login} = useContext( AuthContext );\n\n\tconst [form, setForm] = useState({\n\t\temail:'sebastianlanderos1@gmail.com',\n\t\tpassword:'123456',\n\t\trememberme:false\n\t});\n\n\tuseEffect(() => {\n\n\t\tconst email=localStorage.getItem('email');\n\t\tif (email){\n\t\t\tsetForm ((form) => ({\n\t\t\t\t...form,\n\t\t\t\temail,\n\t\t\t\trememberme:true,\n\t\t\t\t\n\t\t\t}));\n\t\t}\n\t\t\n\t},[])\n\n\tconst onChange= ({target}) => {\n\t\tconst {name,value}=target;\n\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[name]: value,\n\t\t});\n\t}\n\n\tconst toggleCheck=()=>{\n\t\tsetForm({\n\t\t\t...form,\n\t\t\trememberme: !form.rememberme\n\t\t});\n\t}\n\n\tconst onSubmit = async (ev) => {\n\t\tev.preventDefault();\n\t\t\n\t\t(form.rememberme)\n\t\t? localStorage.setItem('email', form.email)\n\t\t: localStorage.removeItem('email');\n\n\t\tconst {email,password} = form \n\t\tconst ok = await login(email, password);\n\n\t\tif (!ok){\n\t\t\tSwal.fire('Error', 'Verifique el usuario y la contraseña', 'error');\n\t\t}\n\n\t}\t\n\n\tconst todoOk= ()=>{\n\t\treturn( form.email.length > 0 && form.password.length > 0) ? true : false;\n\t}\n\n\n    return (\n        <form \n\t\t\tclassName=\"login100-form validate-form flex-sb flex-w\"\n\t\t\tonSubmit={onSubmit}\n\t\t>\n\t\t\t<span className=\"login100-form-title mb-3\">\n\t\t\t\tChat IntopCol - Ingreso\n\t\t\t</span>\n\t\t\t\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\n\t\t\t\t<input \n\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\ttype=\"email\" \n\t\t\t\t\tname=\"email\" \n\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\tvalue={form.email}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\n\t\t\t\t<input \n\t\t\t\tclassName=\"input100\" \n\t\t\t\ttype=\"password\" \n\t\t\t\tname=\"password\" \n\t\t\t\tplaceholder=\"Password\" \n\t\t\t\tvalue={form.password}\n\t\t\t\tonChange={onChange}\n\t\t\t\t/>\n\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"row mb-3\">\n\t\t\t\t<div \n\t\t\t\t\tclassName=\"col\"\n\t\t\t\t\tonClick={() => toggleCheck()}\n\t\t\t\t>\n\t\t\t\t\t<input \n\t\t\t\t\tclassName=\"input-checkbox100\" \n\t\t\t\t\tid=\"ckb1\" \n\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\tname=\"rememberme\" \n\t\t\t\t\tchecked={form.rememberme}\n\t\t\t\t\treadOnly\n\t\t\t\t\t/>\n\t\t\t\t\t<label className=\"label-checkbox100\">\n\t\t\t\t\t\tRecordarme\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t<Link to=\"/auth/register\" className=\"txt1\">\n\t\t\t\t\t\tNueva cuenta?\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"container-login100-form-btn m-t-17\">\n\t\t\t\t<button \n\t\t\t\t\ttype= \"submit\"\n\t\t\t\t\tclassName=\"login100-form-btn\"\n\t\t\t\t\tdisabled={ !todoOk()}\n\t\t\t\t>\n\t\t\t\t\tIngresar\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t</form>\n    )\n}\n","import React,{useContext, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2';\nimport { AuthContext } from '../auth/AuthContext';\n\n\nexport const RegisterPage = () => {\n\tconst {register} = useContext( AuthContext);\n\n\tconst [form, setForm] = useState({\n\t\temail:'',\n\t\tpassword:'',\n\t\tname:''\n\t});\n\n\tconst onChange= ({target}) => {\n\t\tconst {name,value}=target;\n\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[name]: value,\n\t\t});\n\t}\n\n\tconst onSubmit = async (ev) => {\n\t\tev.preventDefault();\n\t\t\n\t\tconst {email,password,name} = form \n\t\tconst msg = await register(name,email, password);\n\n\t\tif (msg !== true) {\n\t\t\tSwal.fire('Error', msg, 'error');\n\t\t}\n\n\t}\t\n\n\tconst todoOk= ()=>{\n\t\treturn(\n\t\t\tform.email.length > 0 &&\n\t\t\tform.password.length > 0 &&\n\t\t\tform.name.length >0\n\t\t\t) ? true : false;\n\t}\n\n\n    return (\n        <form \n\t\t\tclassName=\"login100-form validate-form flex-sb flex-w\"\n\t\t\tonSubmit={onSubmit}\n\t\t\t\n\t\t>\n\t\t\t\t<span className=\"login100-form-title mb-3\">\n\t\t\t\t\tChat Intopcol - Registro\n\t\t\t\t</span>\n\n\t\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tname=\"name\" \n\t\t\t\t\t\tplaceholder=\"Nombre\" \n\t\t\t\t\t\tvalue={form.name}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\n\t\t\t\t\n\t\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\tname=\"email\" \n\t\t\t\t\t\tplaceholder=\"Email\" \n\t\t\t\t\t\tvalue={form.email}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div className=\"wrap-input100 validate-input mb-3\">\n\t\t\t\t\t<input \n\t\t\t\t\t\tclassName=\"input100\" \n\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\tplaceholder=\"Password\" \n\t\t\t\t\t\tvalue={form.password}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"row mb-3\">\n\t\t\t\t\t<div className=\"col text-right\">\n\t\t\t\t\t\t<Link to=\"/auth/login\" className=\"txt1\">\n\t\t\t\t\t\t\tYa tienes cuenta?\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container-login100-form-btn m-t-17\">\n\t\t\t\t\t<button \n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tclassName=\"login100-form-btn\"\n\t\t\t\t\t\tdisabled={ !todoOk}\n\t\t\t\t\t>\t\n\t\t\t\t\t\tCrear cuenta\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t</form>\n    )\n}\n","import React from 'react'\nimport { Switch, Route,Redirect} from 'react-router-dom';\nimport {LoginPage} from '../pages/LoginPage'\nimport { RegisterPage } from '../pages/RegisterPage';\n\nimport '../css/login-register.css';\n\nexport const AuthRouter = () => {\n    return (\n\n        <div className=\"limiter\">\n\t\t    <div className=\"container-login100\">\n\t\t\t    <div className=\"wrap-login100 p-t-50 p-b-90\"> \n\n                    <Switch>\n                        <Route exact path=\"/auth/login\" component={LoginPage}/>\n                        <Route exact path=\"/auth/register\" component={RegisterPage}/>\n\n                        <Redirect to=\"/auth/login\"/>\n                    </Switch>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={(props)=> (\n                (isAuthenticated)\n                    ? <Component {...props}/>\n                    : <Redirect to=\"/auth\"/>\n            )}\n        />    \n    )\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={(props)=> (\n                (!isAuthenticated)\n                    ? <Component {...props}/>\n                    : <Redirect to=\"/\"/>\n            )}\n        />    \n    )\n}","import React, { useContext, useEffect } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    //Route,\n    Redirect\n} from 'react-router-dom'\nimport { AuthContext } from '../auth/AuthContext'\nimport {ChatPage} from '../pages/ChatPage'\nimport {AuthRouter} from './AuthRouter'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\n\nexport const AppRouter = () => {\n\n    const {auth,verificaToken} = useContext(AuthContext)\n\n\n    useEffect(()=>{\n        verificaToken();\n    },[verificaToken])\n\n    if(auth.checking){\n        return <h1>Espere por favor</h1>\n    }\n\n    return (\n    <Router>\n        <div>\n            <Switch>\n                {/* <Route path=\"/auth\" component={AuthRouter} /> */}\n                <PublicRoute isAuthenticated={auth.logged} path=\"/auth\" component={AuthRouter} />\n                <PrivateRoute isAuthenticated={auth.logged}  exact path=\"/\" component={ChatPage}/>\n\n                <Redirect to=\"/\"/>\n            </Switch>\n        </div>\n    </Router>\n    )\n}\n","import React from 'react'\nimport { AuthProvider } from './auth/AuthContext'\nimport { ChatProvider } from './context/chat/chatContext'\nimport { SocketProvider } from './context/SocketContext'\nimport { AppRouter } from './router/AppRouter'\nimport moment from 'moment'\nimport 'moment/locale/es'\nmoment.locale('es')\n\nexport const ChatApp = () => {\n    return (\n        <ChatProvider>\n        <AuthProvider>\n         <SocketProvider>\n         <AppRouter/> \n        </SocketProvider>   \n        </AuthProvider>\n        </ChatProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <ChatApp />,\n  \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}